@use "sass:map";

$border-radius: 1rem;

$themes: (
  light: (
    bg-color: hsla(144, 42%, 89%, 100%),
    bg-color2: hsla(112, 100%, 97%, 100%),
    bg-color3: hsla(130, 54%, 94%, 100%),
    bg-color4: hsla(140, 52%, 81%, 100%),
    fo-color: hsla(0, 0%, 24%, 100%),
    fo-color-light: hsla(0, 0%, 35%, 100%),
    fo-color-dim: hsl(0, 0%, 46%),
    border-color: hsl(105, 41%, 75%),
    danger-color: hsla(0, 90%, 80%, 100%),
  ),
  dark: (
    bg-color: hsla(142, 10%, 15%),
    bg-color2: rgb(22, 24, 22),
    bg-color3: rgb(31, 34, 32),
    bg-color4: rgb(32, 41, 35),
    fo-color: hsl(0, 0%, 83%),
    fo-color-light: hsl(0, 0%, 72%),
    fo-color-dim: hsl(0, 1%, 66%),
    border-color: hsl(105, 41%, 75%),
    danger-color: hsla(0, 90%, 80%, 100%),
  ),
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    :global(.theme-#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

@mixin themify-global($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}
